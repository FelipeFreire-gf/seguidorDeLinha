---------------------------------------------------------------------------------- PARA SUAVIZAR NAS CURVAS -------------------------------------------------------------------------------

void aplicarControlePID(float controle) {
  // Ajusta a velocidade dos motores com base no sinal do controle PID
  controle = constrain(controle, -255, 255); // Limita o controle entre -255 e 255

  // Inicializando as velocidades para ambos os motores
  int velocidadeEsquerda = 255;
  int velocidadeDireita = 255;

  if (controle > 0) {
    // O robô vira para a direita
    velocidadeEsquerda = 255 - controle; // Motor esquerdo gira com velocidade reduzida
    velocidadeDireita = 255;             // Motor direito gira com velocidade máxima
  } else if (controle < 0) {
    // O robô vira para a esquerda
    velocidadeEsquerda = 255;            // Motor esquerdo gira com velocidade máxima
    velocidadeDireita = 255 + controle;  // Motor direito gira com velocidade reduzida
  }

  // Aplique as velocidades calculadas nos motores
  analogWrite(motorEsquerdoA, velocidadeEsquerda);
  digitalWrite(motorEsquerdoB, LOW);

  analogWrite(motorDireitoA, velocidadeDireita);
  digitalWrite(motorDireitoB, LOW);
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

A função digitalWrite() é usada para configurar um pino digital do Arduino para um valor de HIGH ou LOW. Ou seja, você está ligando ou desligando

A função analogWrite() é usada para enviar um sinal PWM (Pulse Width Modulation) a um pino do Arduino. Isso permite controlar a intensidade do sinal de saída, o que é útil para controlar a velocidade dos motores, o brilho dos LEDs ou outras aplicações que exigem controle gradual.

A função constrain() é usada para limitar um valor dentro de um intervalo específico. Ela verifica se o valor fornecido está dentro do intervalo entre o valor mínimo (min) e o valor máximo (max). Se o valor for menor que o mínimo, ele será ajustado para o mínimo; se for maior que o máximo, ele será ajustado para o máximo.

A função digitalRead() é usada para ler o valor de um pino digital do Arduino. Ela retorna HIGH ou LOW, dependendo do estado do pino. Essa função é útil para ler entradas digitais, como botões, sensores de linha, etc.

digitalWrite(): Define um pino digital como HIGH (ligado) ou LOW (desligado).

analogWrite(): Controla a intensidade de um pino com PWM (entre 0 e 255).

constrain(): Limita um valor dentro de um intervalo específico.

digitalRead(): Lê o valor de um pino digital e retorna HIGH ou LOW.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PWM: 

O PWM cria um sinal que alterna entre HIGH e LOW de forma muito rápida, mas com um tempo de "ligado" (HIGH) e um tempo de "desligado" (LOW) variáveis. Esse tempo "ligado" é chamado de duty cycle (ciclo de trabalho), e ele determina quanto tempo o sinal fica em HIGH dentro de um ciclo completo.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

